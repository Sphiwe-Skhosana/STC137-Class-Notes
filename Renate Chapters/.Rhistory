plot(red_img)
red_img <- grayscale(red_channel)
plot(red_channel)
plot(red_channel * c(1,0,0))
View(red_channel)
# Install required packages if not already installed
if (!require("imager")) install.packages("imager", dependencies = TRUE)
if (!require("gridExtra")) install.packages("gridExtra", dependencies = TRUE)
# Load libraries
library(imager)
library(gridExtra)
# Load an example image (you can replace this with your own image file)
#image_path <- system.file("extdata", "andrew-s-ouo1hbizWwo-unsplash.jpg", package = "imager") # Example image
img <- load.image("andrew-s-ouo1hbizWwo-unsplash.jpg")
# Ensure the image is in RGB format
if (!is.cimg(img)) stop("The loaded image is not in a valid RGB format.")
# Split into RGB channels
red_channel <- as.cimg(img[, , 1, 1])   # Extract red channel
green_channel <- as.cimg(img[, , 1, 2]) # Extract green channel
blue_channel <- as.cimg(img[, , 1, 3])  # Extract blue channel
# Create a data frame for each channel
red_df <- as.data.frame(as.cimg(red_channel))
green_df <- as.data.frame(as.cimg(green_channel))
blue_df <- as.data.frame(as.cimg(blue_channel))
# Plotting each channel using ggplot
red_plot <- ggplot(red_df, aes(x = x, y = y, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "red") +
ggtitle("Red Channel") +
theme_minimal() +
theme(legend.position = "none")
library(ggplot2)
# Plotting each channel using ggplot
red_plot <- ggplot(red_df, aes(x = x, y = y, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "red") +
ggtitle("Red Channel") +
theme_minimal() +
theme(legend.position = "none")
green_plot <- ggplot(green_df, aes(x = x, y = y, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "green") +
ggtitle("Green Channel") +
theme_minimal() +
theme(legend.position = "none")
blue_plot <- ggplot(blue_df, aes(x = x, y = y, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "blue") +
ggtitle("Blue Channel") +
theme_minimal() +
theme(legend.position = "none")
# Arrange the plots side by side using gridExtra
grid.arrange(red_plot, green_plot, blue_plot, ncol = 3)
# Install required packages if not already installed
if (!require("imager")) install.packages("imager", dependencies = TRUE)
if (!require("gridExtra")) install.packages("gridExtra", dependencies = TRUE)
# Load libraries
library(imager)
library(gridExtra)
library(ggplot2)
# Load an example image (you can replace this with your own image file)
#image_path <- system.file("extdata", "andrew-s-ouo1hbizWwo-unsplash.jpg", package = "imager") # Example image
img <- load.image("catdog.jpg")
# Ensure the image is in RGB format
if (!is.cimg(img)) stop("The loaded image is not in a valid RGB format.")
# Split into RGB channels
red_channel <- as.cimg(img[, , 1, 1])   # Extract red channel
green_channel <- as.cimg(img[, , 1, 2]) # Extract green channel
blue_channel <- as.cimg(img[, , 1, 3])  # Extract blue channel
# Create a data frame for each channel
red_df <- as.data.frame(as.cimg(red_channel))
green_df <- as.data.frame(as.cimg(green_channel))
blue_df <- as.data.frame(as.cimg(blue_channel))
# Plotting each channel using ggplot
red_plot <- ggplot(red_df, aes(x = x, y = y, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "red") +
ggtitle("Red Channel") +
theme_minimal() +
theme(legend.position = "none")
green_plot <- ggplot(green_df, aes(x = x, y = y, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "green") +
ggtitle("Green Channel") +
theme_minimal() +
theme(legend.position = "none")
blue_plot <- ggplot(blue_df, aes(x = x, y = y, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "blue") +
ggtitle("Blue Channel") +
theme_minimal() +
theme(legend.position = "none")
# Arrange the plots side by side using gridExtra
grid.arrange(red_plot, green_plot, blue_plot, ncol = 3)
# Install required packages if not already installed
if (!require("imager")) install.packages("imager", dependencies = TRUE)
if (!require("gridExtra")) install.packages("gridExtra", dependencies = TRUE)
# Load libraries
library(imager)
library(gridExtra)
library(ggplot2)
# Load an example image (you can replace this with your own image file)
#image_path <- system.file("extdata", "andrew-s-ouo1hbizWwo-unsplash.jpg", package = "imager") # Example image
img <- load.image("catdog.jpg")
# Ensure the image is in RGB format
if (!is.cimg(img)) stop("The loaded image is not in a valid RGB format.")
# Split into RGB channels
red_channel <- as.cimg(img[, , 1, 1])   # Extract red channel
green_channel <- as.cimg(img[, , 1, 2]) # Extract green channel
blue_channel <- as.cimg(img[, , 1, 3])  # Extract blue channel
# Create a data frame for each channel
red_df <- as.data.frame(as.cimg(red_channel))
green_df <- as.data.frame(as.cimg(green_channel))
blue_df <- as.data.frame(as.cimg(blue_channel))
# Plotting each channel using ggplot
red_plot <- ggplot(red_df, aes(x = y, y = x, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "red") +
ggtitle("Red Channel") +
theme_minimal() +
theme(legend.position = "none")
green_plot <- ggplot(green_df, aes(x = x, y = y, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "green") +
ggtitle("Green Channel") +
theme_minimal() +
theme(legend.position = "none")
blue_plot <- ggplot(blue_df, aes(x = x, y = y, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "blue") +
ggtitle("Blue Channel") +
theme_minimal() +
theme(legend.position = "none")
# Arrange the plots side by side using gridExtra
grid.arrange(red_plot, green_plot, blue_plot, ncol = 3)
# Install required packages if not already installed
if (!require("imager")) install.packages("imager", dependencies = TRUE)
if (!require("gridExtra")) install.packages("gridExtra", dependencies = TRUE)
# Load libraries
library(imager)
library(gridExtra)
library(ggplot2)
# Load an example image (you can replace this with your own image file)
#image_path <- system.file("extdata", "andrew-s-ouo1hbizWwo-unsplash.jpg", package = "imager") # Example image
img <- load.image("catdog.jpg")
# Ensure the image is in RGB format
if (!is.cimg(img)) stop("The loaded image is not in a valid RGB format.")
# Split into RGB channels
red_channel <- as.cimg(img[, , 1, 1])   # Extract red channel
green_channel <- as.cimg(img[, , 1, 2]) # Extract green channel
blue_channel <- as.cimg(img[, , 1, 3])  # Extract blue channel
# Create a data frame for each channel
red_df <- as.data.frame(as.cimg(red_channel))
green_df <- as.data.frame(as.cimg(green_channel))
blue_df <- as.data.frame(as.cimg(blue_channel))
# Plotting each channel using ggplot
red_plot <- ggplot(red_df, aes(x = y, y = x, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "red") +
ggtitle("Red Channel") +
theme_minimal() +
theme(legend.position = "none")
green_plot <- ggplot(green_df, aes(x = x, y = y, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "green") +
ggtitle("Green Channel") +
theme_minimal() +
theme(legend.position = "none")
blue_plot <- ggplot(blue_df, aes(x = x, y = y, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "blue") +
ggtitle("Blue Channel") +
theme_minimal() +
theme(legend.position = "none")
# Arrange the plots side by side using gridExtra
grid.arrange(red_plot, green_plot, blue_plot, ncol = 3)
# Install required packages if not already installed
if (!require("imager")) install.packages("imager", dependencies = TRUE)
if (!require("gridExtra")) install.packages("gridExtra", dependencies = TRUE)
# Load libraries
library(imager)
library(gridExtra)
library(ggplot2)
# Load an example image (you can replace this with your own image file)
#image_path <- system.file("extdata", "andrew-s-ouo1hbizWwo-unsplash.jpg", package = "imager") # Example image
img <- load.image("catdog.jpg")
# Ensure the image is in RGB format
if (!is.cimg(img)) stop("The loaded image is not in a valid RGB format.")
# Split into RGB channels
red_channel <- as.cimg(img[, , 1, 1])   # Extract red channel
green_channel <- as.cimg(img[, , 1, 2]) # Extract green channel
blue_channel <- as.cimg(img[, , 1, 3])  # Extract blue channel
# Create a data frame for each channel
red_df <- as.data.frame(as.cimg(red_channel))
green_df <- as.data.frame(as.cimg(green_channel))
blue_df <- as.data.frame(as.cimg(blue_channel))
# Plotting each channel using ggplot
red_plot <- ggplot(red_df, aes(x = y, y = -x, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "red") +
ggtitle("Red Channel") +
theme_minimal() +
theme(legend.position = "none")
green_plot <- ggplot(green_df, aes(x = x, y = y, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "green") +
ggtitle("Green Channel") +
theme_minimal() +
theme(legend.position = "none")
blue_plot <- ggplot(blue_df, aes(x = x, y = y, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "blue") +
ggtitle("Blue Channel") +
theme_minimal() +
theme(legend.position = "none")
# Arrange the plots side by side using gridExtra
grid.arrange(red_plot, green_plot, blue_plot, ncol = 3)
# Install required packages if not already installed
if (!require("imager")) install.packages("imager", dependencies = TRUE)
if (!require("gridExtra")) install.packages("gridExtra", dependencies = TRUE)
# Load libraries
library(imager)
library(gridExtra)
library(ggplot2)
# Load an example image (you can replace this with your own image file)
#image_path <- system.file("extdata", "andrew-s-ouo1hbizWwo-unsplash.jpg", package = "imager") # Example image
img <- load.image("catdog.jpg")
# Ensure the image is in RGB format
if (!is.cimg(img)) stop("The loaded image is not in a valid RGB format.")
# Split into RGB channels
red_channel <- as.cimg(img[, , 1, 1])   # Extract red channel
green_channel <- as.cimg(img[, , 1, 2]) # Extract green channel
blue_channel <- as.cimg(img[, , 1, 3])  # Extract blue channel
# Create a data frame for each channel
red_df <- as.data.frame(as.cimg(red_channel))
green_df <- as.data.frame(as.cimg(green_channel))
blue_df <- as.data.frame(as.cimg(blue_channel))
# Plotting each channel using ggplot
red_plot <- ggplot(red_df, aes(x = -x, y = -y, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "red") +
ggtitle("Red Channel") +
theme_minimal() +
theme(legend.position = "none")
green_plot <- ggplot(green_df, aes(x = x, y = y, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "green") +
ggtitle("Green Channel") +
theme_minimal() +
theme(legend.position = "none")
blue_plot <- ggplot(blue_df, aes(x = x, y = y, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "blue") +
ggtitle("Blue Channel") +
theme_minimal() +
theme(legend.position = "none")
# Arrange the plots side by side using gridExtra
grid.arrange(red_plot, green_plot, blue_plot, ncol = 3)
# Install required packages if not already installed
if (!require("imager")) install.packages("imager", dependencies = TRUE)
if (!require("gridExtra")) install.packages("gridExtra", dependencies = TRUE)
# Load libraries
library(imager)
library(gridExtra)
library(ggplot2)
# Load an example image (you can replace this with your own image file)
#image_path <- system.file("extdata", "andrew-s-ouo1hbizWwo-unsplash.jpg", package = "imager") # Example image
img <- load.image("catdog.jpg")
# Ensure the image is in RGB format
if (!is.cimg(img)) stop("The loaded image is not in a valid RGB format.")
# Split into RGB channels
red_channel <- as.cimg(img[, , 1, 1])   # Extract red channel
green_channel <- as.cimg(img[, , 1, 2]) # Extract green channel
blue_channel <- as.cimg(img[, , 1, 3])  # Extract blue channel
# Create a data frame for each channel
red_df <- as.data.frame(as.cimg(red_channel))
green_df <- as.data.frame(as.cimg(green_channel))
blue_df <- as.data.frame(as.cimg(blue_channel))
# Plotting each channel using ggplot
red_plot <- ggplot(red_df, aes(x = -x, y = -y, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "red") +
ggtitle("Red Channel") +
theme_minimal() +
theme(legend.position = "none")
green_plot <- ggplot(green_df, aes(x = -x, y = -y, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "green") +
ggtitle("Green Channel") +
theme_minimal() +
theme(legend.position = "none")
blue_plot <- ggplot(blue_df, aes(x = -x, y = -y, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "blue") +
ggtitle("Blue Channel") +
theme_minimal() +
theme(legend.position = "none")
# Arrange the plots side by side using gridExtra
grid.arrange(red_plot, green_plot, blue_plot, ncol = 3)
knitr::include_graphics("andrew-s-ouo1hbizWwo-unsplash.jpg")
suppressWarnings({# Install required packages if not already installed
if (!require("imager")) install.packages("imager", dependencies = TRUE)
if (!require("gridExtra")) install.packages("gridExtra", dependencies = TRUE)
# Load libraries
library(imager)
library(gridExtra)
library(ggplot2)
# Load an example image (you can replace this with your own image file)
#image_path <- system.file("extdata", "andrew-s-ouo1hbizWwo-unsplash.jpg", package = "imager") # Example image
img <- load.image("catdog.jpg")
# Ensure the image is in RGB format
if (!is.cimg(img)) stop("The loaded image is not in a valid RGB format.")
# Split into RGB channels
red_channel <- as.cimg(img[, , 1, 1])   # Extract red channel
green_channel <- as.cimg(img[, , 1, 2]) # Extract green channel
blue_channel <- as.cimg(img[, , 1, 3])  # Extract blue channel
# Create a data frame for each channel
red_df <- as.data.frame(as.cimg(red_channel))
green_df <- as.data.frame(as.cimg(green_channel))
blue_df <- as.data.frame(as.cimg(blue_channel))
# Plotting each channel using ggplot
red_plot <- ggplot(red_df, aes(x = x, y = -y, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "red") +
ggtitle("Red Channel") +
theme_minimal() +
theme(legend.position = "none")
green_plot <- ggplot(green_df, aes(x = x, y = -y, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "green") +
ggtitle("Green Channel") +
theme_minimal() +
theme(legend.position = "none")
blue_plot <- ggplot(blue_df, aes(x = x, y = -y, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "blue") +
ggtitle("Blue Channel") +
theme_minimal() +
theme(legend.position = "none")
# Arrange the plots side by side using gridExtra
grid.arrange(red_plot, green_plot, blue_plot, ncol = 3)
})
suppressWarnings({suppressMessages({# Install required packages if not already installed
if (!require("imager")) install.packages("imager", dependencies = TRUE)
if (!require("gridExtra")) install.packages("gridExtra", dependencies = TRUE)
# Load libraries
library(imager)
library(gridExtra)
library(ggplot2)
# Load an example image (you can replace this with your own image file)
#image_path <- system.file("extdata", "andrew-s-ouo1hbizWwo-unsplash.jpg", package = "imager") # Example image
img <- load.image("catdog.jpg")
# Ensure the image is in RGB format
if (!is.cimg(img)) stop("The loaded image is not in a valid RGB format.")
# Split into RGB channels
red_channel <- as.cimg(img[, , 1, 1])   # Extract red channel
green_channel <- as.cimg(img[, , 1, 2]) # Extract green channel
blue_channel <- as.cimg(img[, , 1, 3])  # Extract blue channel
# Create a data frame for each channel
red_df <- as.data.frame(as.cimg(red_channel))
green_df <- as.data.frame(as.cimg(green_channel))
blue_df <- as.data.frame(as.cimg(blue_channel))
# Plotting each channel using ggplot
red_plot <- ggplot(red_df, aes(x = x, y = -y, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "red") +
ggtitle("Red Channel") +
theme_minimal() +
theme(legend.position = "none") +
theme(
plot.title = element_text(size = 16),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12)
)
green_plot <- ggplot(green_df, aes(x = x, y = -y, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "green") +
ggtitle("Green Channel") +
theme_minimal() +
theme(legend.position = "none")
blue_plot <- ggplot(blue_df, aes(x = x, y = -y, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "blue") +
ggtitle("Blue Channel") +
theme_minimal() +
theme(legend.position = "none")
# Arrange the plots side by side using gridExtra
grid.arrange(red_plot, green_plot, blue_plot, ncol = 3)
})})
suppressWarnings({suppressMessages({# Install required packages if not already installed
if (!require("imager")) install.packages("imager", dependencies = TRUE)
if (!require("gridExtra")) install.packages("gridExtra", dependencies = TRUE)
# Load libraries
library(imager)
library(gridExtra)
library(ggplot2)
# Load an example image (you can replace this with your own image file)
#image_path <- system.file("extdata", "andrew-s-ouo1hbizWwo-unsplash.jpg", package = "imager") # Example image
img <- load.image("catdog.jpg")
# Ensure the image is in RGB format
if (!is.cimg(img)) stop("The loaded image is not in a valid RGB format.")
# Split into RGB channels
red_channel <- as.cimg(img[, , 1, 1])   # Extract red channel
green_channel <- as.cimg(img[, , 1, 2]) # Extract green channel
blue_channel <- as.cimg(img[, , 1, 3])  # Extract blue channel
# Create a data frame for each channel
red_df <- as.data.frame(as.cimg(red_channel))
green_df <- as.data.frame(as.cimg(green_channel))
blue_df <- as.data.frame(as.cimg(blue_channel))
# Plotting each channel using ggplot
red_plot <- ggplot(red_df, aes(x = x, y = -y, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "red") +
ggtitle("Red Channel") +
theme_minimal() +
theme(legend.position = "none") +
theme(
plot.title = element_text(size = 48),
axis.title = element_text(size = 32),
axis.text = element_text(size = 32)
)
green_plot <- ggplot(green_df, aes(x = x, y = -y, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "green") +
ggtitle("Green Channel") +
theme_minimal() +
theme(legend.position = "none")
blue_plot <- ggplot(blue_df, aes(x = x, y = -y, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "blue") +
ggtitle("Blue Channel") +
theme_minimal() +
theme(legend.position = "none")
# Arrange the plots side by side using gridExtra
grid.arrange(red_plot, green_plot, blue_plot, ncol = 3)
})})
suppressWarnings({suppressMessages({# Install required packages if not already installed
if (!require("imager")) install.packages("imager", dependencies = TRUE)
if (!require("gridExtra")) install.packages("gridExtra", dependencies = TRUE)
# Load libraries
library(imager)
library(gridExtra)
library(ggplot2)
# Load an example image (you can replace this with your own image file)
#image_path <- system.file("extdata", "andrew-s-ouo1hbizWwo-unsplash.jpg", package = "imager") # Example image
img1 <- load.image("Sat.jpg")
img2 <- load.image("POIs.jpg")
img3 <- load.image("Roads.jpg")
img4 <- load.image("Overlaid.jpg")
# Ensure the image is in RGB format
if (!is.cimg(img)) stop("The loaded image is not in a valid RGB format.")
# Plotting each channel using ggplot
Sat_plot <- ggplot(img1, aes(x = x, y = -y, fill = value)) +
geom_raster() +
theme_minimal() +
theme(legend.position = "none") +
theme(
plot.title = element_text(size = 48),
axis.title = element_text(size = 32),
axis.text = element_text(size = 32)
)
point_plot <- ggplot(green_df, aes(x = x, y = -y, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "green") +
ggtitle("Green Channel") +
theme_minimal() +
theme(legend.position = "none") +
theme(
plot.title = element_text(size = 48),
axis.title = element_text(size = 32),
axis.text = element_text(size = 32)
)
road_plot <- ggplot(blue_df, aes(x = x, y = -y, fill = value)) +
geom_raster() +
scale_fill_gradient(low = "white", high = "blue") +
ggtitle("Blue Channel") +
theme_minimal() +
theme(legend.position = "none") +
theme(
plot.title = element_text(size = 48),
axis.title = element_text(size = 32),
axis.text = element_text(size = 32)
)
# Arrange the plots side by side using gridExtra
grid.arrange(sat_plot, point_plot, road_plot, ncol = 3)
})})
# Plotting each channel using ggplot
Sat_plot <- ggplot(as.data.frame(img1), aes(x = x, y = -y, fill = value)) +
geom_raster() +
theme_minimal() +
theme(legend.position = "none") +
theme(
plot.title = element_text(size = 48),
axis.title = element_text(size = 32),
axis.text = element_text(size = 32)
)
Sat_plot
# Plotting each channel using ggplot
Sat_plot <- ggplot(as.data.frame(img1), aes(x = x, y = -y)) +
geom_raster() +
theme_minimal() +
theme(legend.position = "none") +
theme(
plot.title = element_text(size = 48),
axis.title = element_text(size = 32),
axis.text = element_text(size = 32)
)
Sat_plot
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics("Sat.jpg")
knitr::include_graphics("Sat.jpg","POIs.jpg")
knitr::include_graphics(c("Sat.jpg","POIs.jpg"))
